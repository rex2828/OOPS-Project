create database project;
use project;
create table officer(Officer_id varchar(50),Officer_name varchar(50), primary key (Officer_id));
create table officer_designation(Officer_id varchar(50),Officer_designation varchar(50), primary key (Officer_id));
create table officer_ranks(Officer_id varchar(50),Officer_ranks varchar(50), primary key (Officer_id));
create table officer_Training_Headquaters(Officer_designation varchar(50),Training_command_headquaters varchar(50), primary key (Training_command_headquaters));
create table officer_marital_status(Officer_id varchar(50),Officer_marital_status varchar(50), primary key (Officer_id));
create table Officer_experience(officer_id varchar(50),Officer_experience int, primary key (Officer_id));


#insertion
delimiter //
create procedure Insertion(in Officer_id1 varchar(50),in Officer_name1 varchar(50), in Officer_designation1 varchar(50),in Officer_ranks1 varchar(50),in Officer_marital_status1 varchar(50),in Officer_exp1 int)
begin
declare tmp int default 0;
select count(*) into tmp from officer where Officer_id = Officer_id1;
if tmp = 0 then
    insert into officer values(Officer_id1,Officer_name1);
    insert into officer_designation values(Officer_id1,Officer_designation1);
    insert into officer_ranks values(Officer_id1,Officer_ranks1);
    insert into officer_marital_status values(Officer_id1,Officer_marital_status1);
    insert into officer_experience values(Officer_id1,Officer_exp1);
else
    update officer set Officer_name = Officer_name1 where Officer_id = Officer_id1;
    update officer_designation set Officer_designation = Officer_designation1 where Officer_id = Officer_id1;
    update officer_ranks set Officer_ranks = Officer_ranks1 where Officer_id = Officer_id1;
    update officer_marital_status set Officer_marital_status = Officer_marital_status1 where Officer_id = Officer_id1;
    update officer_experience set Officer_experience = Officer_exp1 where Officer_id = Officer_id1;
END IF;
end //
delimiter ;

#deletion
delimiter //
create procedure Deletion(in id varchar(50))
begin
delete from officer where Officer_id = id;
delete from officer_designation where Officer_id = id;
delete from officer_ranks where Officer_id = id;
delete from officer_marital_status where Officer_id = id;
delete from officer_experience where Officer_id = id;
end //

#update name
delimiter //
create procedure Update_name(in new varchar(50), in old varchar(50) )
begin
update officer set officer_name = new where officer_name = old;
end //

#search by name
delimiter //
create procedure Search_name(in name varchar(50))
begin
select officer.officer_id ,officer_name , officer_designation from officer,officer_designation where officer.officer_id = officer_designation.officer_id and officer_name = name;
end //

#search by ids
create procedure Search_id(in id varchar(50))
begin
select officer.officer_id ,officer_name , officer_designation from officer,officer_designation where officer.officer_id = officer_designation.officer_id and officer.officer_id = id;
end //

#sorting by name
delimiter //
create procedure sorting_name()
begin
select officer.officer_id ,officer_name , officer_designation from officer,officer_designation where officer.officer_id = officer_designation.officer_id order by Officer_name asc;
end //

delimiter ;

#for using above procedure we just need to call via passing arguments
#call procedure_name('arguments');

#search by first name last name any partial string

delimiter //
create procedure Search_name(in name varchar(50))
begin
SET @x = name;
select officer.officer_id ,officer_name , officer_designation from officer,officer_designation where officer.officer_id = officer_designation.officer_id and officer_name LIKE concat('%',@x,'%');
end //
delimiter ;


delimiter //
create procedure Search_rank(in rank varchar(50))
begin
SET @x = rank;
select officer.Officer_id ,Officer_name , Officer_ranks from officer,officer_ranks where officer.Officer_id = officer_ranks.Officer_id and Officer_ranks LIKE concat('%',@x,'%');
end //
delimiter ;





#search by exp
delimiter //
create procedure search_exp(in exp int)
begin
select officer.officer_id ,officer_name , officer_experience from officer,officer_experience where officer.officer_id = officer_experience.officer_id and officer_experience = exp;
end //
delimiter ;


#search by exp greater
delimiter //
create procedure search_exp_greater(in gt int)
begin
select officer.officer_id ,officer_name , officer_experience from officer,officer_experience where officer.officer_id = officer_experience.officer_id and officer_experience > gt;
end //



-search -id 122335
-search -firstname "abc" -sort asc
-search -lastname "abc" -sort asc
-search -(int)exp 3yrs -sort asc
-search -exp -gt 3yrs
-search 





select officer.officer_id ,officer_name , officer_designation, officer_ranks,officer_marital_status,officer_experience from officer,officer_designation,officer_ranks,officer_marital_status,officer_experience where officer.officer_id = officer_designation.officer_id = officer_ranks.officer_id = officer_ranks.officer_id and officer_name LIKE 'SOORAJ';



/*
String a1 = "name";
        String val = "SOORAJ";
        String jdbcUrl = "jdbc:mysql://localhost:3306/project";
        String username = "root";
        String password = "password";
        Connection connection = null;

        if (a1 == "name" || a1 == "designation" || a1 == "rank" || a1 == "marital-status") {
            try {
                connection = DriverManager.getConnection(jdbcUrl, username, password);

                String sql = "call Search_" + a1 + "('" + val + "')";
                Statement stmt = connection.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    System.out.println(rs.getString(1) + "  " + rs.getString(2) + "  " + rs.getString(3));
                }
                connection.close();

            } catch (Exception exception) {
                exception.printStackTrace();
            }
        } else if (a1 == "id" || a1 == "exp") {
            try {
                connection = DriverManager.getConnection(jdbcUrl, username, password);

                String sql = "call Search_" + a1 + "(" + val + ")";
                Statement stmt = connection.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    System.out.println(rs.getString(1) + "  " + rs.getString(2) + "  " + rs.getString(3));
                }
                connection.close();

            } catch (Exception exception) {
                exception.printStackTrace();
            }
        } else {

        }
*/



select officer.officer_id ,officer_name , officer_designation from officer,officer_designation where officer.officer_id = officer_designation.officer_id;